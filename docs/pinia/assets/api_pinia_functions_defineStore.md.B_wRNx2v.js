import{_ as t,c as o,a2 as r,o as a}from"./chunks/framework.DoMDgatr.js";const l=JSON.parse('{"title":"Function: defineStore()","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/pinia/functions/defineStore.md","filePath":"api/pinia/functions/defineStore.md"}'),d={name:"api/pinia/functions/defineStore.md"};function c(n,e,s,i,p,S){return a(),o("div",null,e[0]||(e[0]=[r('<p><a href="./../../"><strong>API Documentation</strong></a> • <strong>Docs</strong></p><hr><p><a href="./../../">API Documentation</a> / <a href="./../">pinia</a> / defineStore</p><h1 id="Function-defineStore-" tabindex="-1">Function: defineStore() <a class="header-anchor" href="#Function-defineStore-" aria-label="Permalink to &quot;Function: defineStore()&quot;">​</a></h1><h2 id="defineStore-id-options-" tabindex="-1">defineStore(id, options) <a class="header-anchor" href="#defineStore-id-options-" aria-label="Permalink to &quot;defineStore(id, options)&quot;">​</a></h2><blockquote><p><strong>defineStore</strong>&lt;<code>Id</code>, <code>S</code>, <code>G</code>, <code>A</code>&gt;(<code>id</code>, <code>options</code>): <a href="./../interfaces/StoreDefinition.html"><code>StoreDefinition</code></a>&lt;<code>Id</code>, <code>S</code>, <code>G</code>, <code>A</code>&gt;</p></blockquote><p>Creates a <code>useStore</code> function that retrieves the store instance</p><h3 id="Type-Parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#Type-Parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h3><p>• <strong>Id</strong> <em>extends</em> <code>string</code></p><p>• <strong>S</strong> <em>extends</em> <a href="./../type-aliases/StateTree.html"><code>StateTree</code></a> = <code>object</code></p><p>• <strong>G</strong> <em>extends</em> <a href="./../type-aliases/GettersTree.html"><code>_GettersTree</code></a>&lt;<code>S</code>&gt; = <code>object</code></p><p>• <strong>A</strong> = <code>object</code></p><h3 id="Parameters" tabindex="-1">Parameters <a class="header-anchor" href="#Parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p>• <strong>id</strong>: <code>Id</code></p><p>id of the store (must be unique)</p><p>• <strong>options</strong>: <code>Omit</code>&lt;<a href="./../interfaces/DefineStoreOptions.html"><code>DefineStoreOptions</code></a>&lt;<code>Id</code>, <code>S</code>, <code>G</code>, <code>A</code>&gt;, <code>&quot;id&quot;</code>&gt;</p><p>options to define the store</p><h3 id="Returns" tabindex="-1">Returns <a class="header-anchor" href="#Returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="./../interfaces/StoreDefinition.html"><code>StoreDefinition</code></a>&lt;<code>Id</code>, <code>S</code>, <code>G</code>, <code>A</code>&gt;</p><h2 id="defineStore-options-" tabindex="-1">defineStore(options) <a class="header-anchor" href="#defineStore-options-" aria-label="Permalink to &quot;defineStore(options)&quot;">​</a></h2><blockquote><p><strong>defineStore</strong>&lt;<code>Id</code>, <code>S</code>, <code>G</code>, <code>A</code>&gt;(<code>options</code>): <a href="./../interfaces/StoreDefinition.html"><code>StoreDefinition</code></a>&lt;<code>Id</code>, <code>S</code>, <code>G</code>, <code>A</code>&gt;</p></blockquote><p>Creates a <code>useStore</code> function that retrieves the store instance</p><h3 id="Type-Parameters-1" tabindex="-1">Type Parameters <a class="header-anchor" href="#Type-Parameters-1" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h3><p>• <strong>Id</strong> <em>extends</em> <code>string</code></p><p>• <strong>S</strong> <em>extends</em> <a href="./../type-aliases/StateTree.html"><code>StateTree</code></a> = <code>object</code></p><p>• <strong>G</strong> <em>extends</em> <a href="./../type-aliases/GettersTree.html"><code>_GettersTree</code></a>&lt;<code>S</code>&gt; = <code>object</code></p><p>• <strong>A</strong> = <code>object</code></p><h3 id="Parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#Parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p>• <strong>options</strong>: <a href="./../interfaces/DefineStoreOptions.html"><code>DefineStoreOptions</code></a>&lt;<code>Id</code>, <code>S</code>, <code>G</code>, <code>A</code>&gt;</p><p>options to define the store</p><h3 id="Returns-1" tabindex="-1">Returns <a class="header-anchor" href="#Returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="./../interfaces/StoreDefinition.html"><code>StoreDefinition</code></a>&lt;<code>Id</code>, <code>S</code>, <code>G</code>, <code>A</code>&gt;</p><h2 id="defineStore-id-storeSetup-options-" tabindex="-1">defineStore(id, storeSetup, options) <a class="header-anchor" href="#defineStore-id-storeSetup-options-" aria-label="Permalink to &quot;defineStore(id, storeSetup, options)&quot;">​</a></h2><blockquote><p><strong>defineStore</strong>&lt;<code>Id</code>, <code>SS</code>&gt;(<code>id</code>, <code>storeSetup</code>, <code>options</code>?): <a href="./../interfaces/StoreDefinition.html"><code>StoreDefinition</code></a>&lt;<code>Id</code>, <a href="./../type-aliases/ExtractStateFromSetupStore.html"><code>_ExtractStateFromSetupStore</code></a>&lt;<code>SS</code>&gt;, <a href="./../type-aliases/ExtractGettersFromSetupStore.html"><code>_ExtractGettersFromSetupStore</code></a>&lt;<code>SS</code>&gt;, <a href="./../type-aliases/ExtractActionsFromSetupStore.html"><code>_ExtractActionsFromSetupStore</code></a>&lt;<code>SS</code>&gt;&gt;</p></blockquote><p>Creates a <code>useStore</code> function that retrieves the store instance</p><h3 id="Type-Parameters-2" tabindex="-1">Type Parameters <a class="header-anchor" href="#Type-Parameters-2" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h3><p>• <strong>Id</strong> <em>extends</em> <code>string</code></p><p>• <strong>SS</strong></p><h3 id="Parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#Parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p>• <strong>id</strong>: <code>Id</code></p><p>id of the store (must be unique)</p><p>• <strong>storeSetup</strong></p><p>function that defines the store</p><p>• <strong>options?</strong>: <a href="./../interfaces/DefineSetupStoreOptions.html"><code>DefineSetupStoreOptions</code></a>&lt;<code>Id</code>, <a href="./../type-aliases/ExtractStateFromSetupStore.html"><code>_ExtractStateFromSetupStore</code></a>&lt;<code>SS</code>&gt;, <a href="./../type-aliases/ExtractGettersFromSetupStore.html"><code>_ExtractGettersFromSetupStore</code></a>&lt;<code>SS</code>&gt;, <a href="./../type-aliases/ExtractActionsFromSetupStore.html"><code>_ExtractActionsFromSetupStore</code></a>&lt;<code>SS</code>&gt;&gt;</p><p>extra options</p><h3 id="Returns-2" tabindex="-1">Returns <a class="header-anchor" href="#Returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="./../interfaces/StoreDefinition.html"><code>StoreDefinition</code></a>&lt;<code>Id</code>, <a href="./../type-aliases/ExtractStateFromSetupStore.html"><code>_ExtractStateFromSetupStore</code></a>&lt;<code>SS</code>&gt;, <a href="./../type-aliases/ExtractGettersFromSetupStore.html"><code>_ExtractGettersFromSetupStore</code></a>&lt;<code>SS</code>&gt;, <a href="./../type-aliases/ExtractActionsFromSetupStore.html"><code>_ExtractActionsFromSetupStore</code></a>&lt;<code>SS</code>&gt;&gt;</p>',47)]))}const f=t(d,[["render",c]]);export{l as __pageData,f as default};
