import{_ as e,c as a,a2 as o,o as n}from"./chunks/framework.DoMDgatr.js";const h=JSON.parse('{"title":"Enumeration: MutationType","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/pinia/enumerations/MutationType.md","filePath":"api/pinia/enumerations/MutationType.md"}'),i={name:"api/pinia/enumerations/MutationType.md"};function c(r,t,u,p,s,d){return n(),a("div",null,t[0]||(t[0]=[o('<p><a href="./../../"><strong>API Documentation</strong></a> • <strong>Docs</strong></p><hr><p><a href="./../../">API Documentation</a> / <a href="./../">pinia</a> / MutationType</p><h1 id="Enumeration-MutationType" tabindex="-1">Enumeration: MutationType <a class="header-anchor" href="#Enumeration-MutationType" aria-label="Permalink to &quot;Enumeration: MutationType&quot;">​</a></h1><p>Possible types for SubscriptionCallback</p><h2 id="Enumeration-Members" tabindex="-1">Enumeration Members <a class="header-anchor" href="#Enumeration-Members" aria-label="Permalink to &quot;Enumeration Members&quot;">​</a></h2><h3 id="direct" tabindex="-1">direct <a class="header-anchor" href="#direct" aria-label="Permalink to &quot;direct&quot;">​</a></h3><blockquote><p><strong>direct</strong>: <code>&quot;direct&quot;</code></p></blockquote><p>Direct mutation of the state:</p><ul><li><code>store.name = &#39;new name&#39;</code></li><li><code>store.$state.name = &#39;new name&#39;</code></li><li><code>store.list.push(&#39;new item&#39;)</code></li></ul><hr><h3 id="patchFunction" tabindex="-1">patchFunction <a class="header-anchor" href="#patchFunction" aria-label="Permalink to &quot;patchFunction&quot;">​</a></h3><blockquote><p><strong>patchFunction</strong>: <code>&quot;patch function&quot;</code></p></blockquote><p>Mutated the state with <code>$patch</code> and a function</p><ul><li><code>store.$patch(state =&gt; state.name = &#39;newName&#39;)</code></li></ul><hr><h3 id="patchObject" tabindex="-1">patchObject <a class="header-anchor" href="#patchObject" aria-label="Permalink to &quot;patchObject&quot;">​</a></h3><blockquote><p><strong>patchObject</strong>: <code>&quot;patch object&quot;</code></p></blockquote><p>Mutated the state with <code>$patch</code> and an object</p><ul><li><code>store.$patch({ name: &#39;newName&#39; })</code></li></ul>',20)]))}const m=e(i,[["render",c]]);export{h as __pageData,m as default};
