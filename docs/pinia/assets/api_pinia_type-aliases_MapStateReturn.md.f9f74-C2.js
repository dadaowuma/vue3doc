import{_ as t,c as a,a2 as o,o as r}from"./chunks/framework.DoMDgatr.js";const S=JSON.parse('{"title":"Type Alias: _MapStateReturn<S, G, Keys>","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/pinia/type-aliases/MapStateReturn.md","filePath":"api/pinia/type-aliases/MapStateReturn.md"}'),n={name:"api/pinia/type-aliases/MapStateReturn.md"};function s(p,e,c,d,i,l){return r(),a("div",null,e[0]||(e[0]=[o('<p><a href="./../../"><strong>API Documentation</strong></a> • <strong>Docs</strong></p><hr><p><a href="./../../">API Documentation</a> / <a href="./../">pinia</a> / _MapStateReturn</p><h1 id="Type-Alias-MapStateReturn-S-G-Keys-" tabindex="-1">Type Alias: _MapStateReturn&lt;S, G, Keys&gt; <a class="header-anchor" href="#Type-Alias-MapStateReturn-S-G-Keys-" aria-label="Permalink to &quot;Type Alias: \\_MapStateReturn\\&lt;S, G, Keys\\&gt;&quot;">​</a></h1><blockquote><p><strong>_MapStateReturn</strong>&lt;<code>S</code>, <code>G</code>, <code>Keys</code>&gt;: <code>{ [key in Keys]: key extends keyof Store&lt;string, S, G, Object&gt; ? Function : never }</code></p></blockquote><p>For internal use <strong>only</strong></p><h2 id="Type-Parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#Type-Parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>S</strong> <em>extends</em> <a href="./StateTree.html"><code>StateTree</code></a></p><p>• <strong>G</strong> <em>extends</em> <a href="./GettersTree.html"><code>_GettersTree</code></a>&lt;<code>S</code>&gt; | <code>object</code></p><p>• <strong>Keys</strong> <em>extends</em> keyof <code>S</code> | keyof <code>G</code> = keyof <code>S</code> | keyof <code>G</code></p>',10)]))}const u=t(n,[["render",s]]);export{S as __pageData,u as default};
