import{_ as t,c as a,a2 as r,o}from"./chunks/framework.DoMDgatr.js";const G=JSON.parse('{"title":"Type Alias: _StoreWithGetters<G>","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/pinia/type-aliases/StoreWithGetters.md","filePath":"api/pinia/type-aliases/StoreWithGetters.md"}'),s={name:"api/pinia/type-aliases/StoreWithGetters.md"};function i(n,e,p,l,h,c){return o(),a("div",null,e[0]||(e[0]=[r('<p><a href="./../../"><strong>API Documentation</strong></a> • <strong>Docs</strong></p><hr><p><a href="./../../">API Documentation</a> / <a href="./../">pinia</a> / _StoreWithGetters</p><h1 id="Type-Alias-StoreWithGetters-G-" tabindex="-1">Type Alias: _StoreWithGetters&lt;G&gt; <a class="header-anchor" href="#Type-Alias-StoreWithGetters-G-" aria-label="Permalink to &quot;Type Alias: \\_StoreWithGetters\\&lt;G\\&gt;&quot;">​</a></h1><blockquote><p><strong>_StoreWithGetters</strong>&lt;<code>G</code>&gt;: <code>{ readonly [k in keyof G]: G[k] extends Function ? R : UnwrapRef&lt;G[k]&gt; }</code></p></blockquote><p>Store augmented with getters. For internal usage only. For internal use <strong>only</strong></p><h2 id="Type-Parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#Type-Parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>G</strong></p>',8)]))}const g=t(s,[["render",i]]);export{G as __pageData,g as default};
