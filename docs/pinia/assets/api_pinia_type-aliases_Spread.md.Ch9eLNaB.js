import{_ as a,c as t,a2 as r,o}from"./chunks/framework.DoMDgatr.js";const h=JSON.parse('{"title":"Type Alias: _Spread<A>","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/pinia/type-aliases/Spread.md","filePath":"api/pinia/type-aliases/Spread.md"}'),p={name:"api/pinia/type-aliases/Spread.md"};function n(d,e,s,i,c,l){return o(),t("div",null,e[0]||(e[0]=[r('<p><a href="./../../"><strong>API Documentation</strong></a> • <strong>Docs</strong></p><hr><p><a href="./../../">API Documentation</a> / <a href="./../">pinia</a> / _Spread</p><h1 id="Type-Alias-Spread-A-" tabindex="-1">Type Alias: _Spread&lt;A&gt; <a class="header-anchor" href="#Type-Alias-Spread-A-" aria-label="Permalink to &quot;Type Alias: \\_Spread\\&lt;A\\&gt;&quot;">​</a></h1><blockquote><p><strong>_Spread</strong>&lt;<code>A</code>&gt;: <code>A</code> <em>extends</em> [infer L, <code>...(infer R)</code>] ? <a href="./StoreObject.html"><code>_StoreObject</code></a>&lt;<code>L</code>&gt; &amp; <a href="./Spread.html"><code>_Spread</code></a>&lt;<code>R</code>&gt; : <code>unknown</code></p></blockquote><p>For internal use <strong>only</strong>.</p><h2 id="Type-Parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#Type-Parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>A</strong> <em>extends</em> readonly <code>any</code>[]</p>',8)]))}const f=a(p,[["render",n]]);export{h as __pageData,f as default};
