import{_ as t,c as o,a2 as a,o as r}from"./chunks/framework.DoMDgatr.js";const f=JSON.parse('{"title":"Interface: StoreDefinition()<Id, S, G, A>","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/pinia/interfaces/StoreDefinition.md","filePath":"api/pinia/interfaces/StoreDefinition.md"}'),i={name:"api/pinia/interfaces/StoreDefinition.md"};function n(d,e,s,c,l,p){return r(),o("div",null,e[0]||(e[0]=[a('<p><a href="./../../"><strong>API Documentation</strong></a> • <strong>Docs</strong></p><hr><p><a href="./../../">API Documentation</a> / <a href="./../">pinia</a> / StoreDefinition</p><h1 id="Interface-StoreDefinition-Id-S-G-A-" tabindex="-1">Interface: StoreDefinition()&lt;Id, S, G, A&gt; <a class="header-anchor" href="#Interface-StoreDefinition-Id-S-G-A-" aria-label="Permalink to &quot;Interface: StoreDefinition()\\&lt;Id, S, G, A\\&gt;&quot;">​</a></h1><p>Return type of <code>defineStore()</code>. Function that allows instantiating a store.</p><h2 id="Extended-by" tabindex="-1">Extended by <a class="header-anchor" href="#Extended-by" aria-label="Permalink to &quot;Extended by&quot;">​</a></h2><ul><li><a href="./SetupStoreDefinition.html"><code>SetupStoreDefinition</code></a></li></ul><h2 id="Type-Parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#Type-Parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>Id</strong> <em>extends</em> <code>string</code> = <code>string</code></p><p>• <strong>S</strong> <em>extends</em> <a href="./../type-aliases/StateTree.html"><code>StateTree</code></a> = <a href="./../type-aliases/StateTree.html"><code>StateTree</code></a></p><p>• <strong>G</strong> = <a href="./../type-aliases/GettersTree.html"><code>_GettersTree</code></a>&lt;<code>S</code>&gt;</p><p>• <strong>A</strong> = <a href="./../type-aliases/ActionsTree.html"><code>_ActionsTree</code></a></p><blockquote><p><strong>StoreDefinition</strong>(<code>pinia</code>?, <code>hot</code>?): <a href="./../type-aliases/Store.html"><code>Store</code></a>&lt;<code>Id</code>, <code>S</code>, <code>G</code>, <code>A</code>&gt;</p></blockquote><p>Return type of <code>defineStore()</code>. Function that allows instantiating a store.</p><h2 id="Parameters" tabindex="-1">Parameters <a class="header-anchor" href="#Parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><p>• <strong>pinia?</strong>: <code>null</code> | <a href="./Pinia.html"><code>Pinia</code></a></p><p>Pinia instance to retrieve the store</p><p>• <strong>hot?</strong>: <a href="./../type-aliases/StoreGeneric.html"><code>StoreGeneric</code></a></p><p>dev only hot module replacement</p><h2 id="Returns" tabindex="-1">Returns <a class="header-anchor" href="#Returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><a href="./../type-aliases/Store.html"><code>Store</code></a>&lt;<code>Id</code>, <code>S</code>, <code>G</code>, <code>A</code>&gt;</p><h2 id="Properties" tabindex="-1">Properties <a class="header-anchor" href="#Properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="-id" tabindex="-1">$id <a class="header-anchor" href="#-id" aria-label="Permalink to &quot;$id&quot;">​</a></h3><blockquote><p><strong>$id</strong>: <code>Id</code></p></blockquote><p>Id of the store. Used by map helpers.</p>',25)]))}const m=t(i,[["render",n]]);export{f as __pageData,m as default};
