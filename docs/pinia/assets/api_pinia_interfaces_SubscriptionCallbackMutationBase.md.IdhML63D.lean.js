import{_ as e,c as a,a2 as o,o as i}from"./chunks/framework.DoMDgatr.js";const b=JSON.parse('{"title":"Interface: _SubscriptionCallbackMutationBase","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/pinia/interfaces/SubscriptionCallbackMutationBase.md","filePath":"api/pinia/interfaces/SubscriptionCallbackMutationBase.md"}'),n={name:"api/pinia/interfaces/SubscriptionCallbackMutationBase.md"};function r(c,t,s,l,u,d){return i(),a("div",null,t[0]||(t[0]=[o('<p><a href="./../../"><strong>API Documentation</strong></a> â€¢ <strong>Docs</strong></p><hr><p><a href="./../../">API Documentation</a> / <a href="./../">pinia</a> / _SubscriptionCallbackMutationBase</p><h1 id="Interface-SubscriptionCallbackMutationBase" tabindex="-1">Interface: _SubscriptionCallbackMutationBase <a class="header-anchor" href="#Interface-SubscriptionCallbackMutationBase" aria-label="Permalink to &quot;Interface: \\_SubscriptionCallbackMutationBase&quot;">â€‹</a></h1><p>Base type for the context passed to a subscription callback. Internal type.</p><h2 id="Extended-by" tabindex="-1">Extended by <a class="header-anchor" href="#Extended-by" aria-label="Permalink to &quot;Extended by&quot;">â€‹</a></h2><ul><li><a href="./SubscriptionCallbackMutationDirect.html"><code>SubscriptionCallbackMutationDirect</code></a></li><li><a href="./SubscriptionCallbackMutationPatchFunction.html"><code>SubscriptionCallbackMutationPatchFunction</code></a></li><li><a href="./SubscriptionCallbackMutationPatchObject.html"><code>SubscriptionCallbackMutationPatchObject</code></a></li></ul><h2 id="Properties" tabindex="-1">Properties <a class="header-anchor" href="#Properties" aria-label="Permalink to &quot;Properties&quot;">â€‹</a></h2><h3 id="events-" tabindex="-1">events? <a class="header-anchor" href="#events-" aria-label="Permalink to &quot;events?&quot;">â€‹</a></h3><blockquote><p><code>optional</code> <strong>events</strong>: <code>DebuggerEvent</code> | <code>DebuggerEvent</code>[]</p></blockquote><p>ðŸ”´ DEV ONLY, DO NOT use for production code. Different mutation calls. Comes from <a href="https://vuejs.org/guide/extras/reactivity-in-depth.html#reactivity-debugging" target="_blank" rel="noreferrer">https://vuejs.org/guide/extras/reactivity-in-depth.html#reactivity-debugging</a> and allows to track mutations in devtools and plugins <strong>during development only</strong>.</p><hr><h3 id="storeId" tabindex="-1">storeId <a class="header-anchor" href="#storeId" aria-label="Permalink to &quot;storeId&quot;">â€‹</a></h3><blockquote><p><strong>storeId</strong>: <code>string</code></p></blockquote><p><code>id</code> of the store doing the mutation.</p><hr><h3 id="type" tabindex="-1">type <a class="header-anchor" href="#type" aria-label="Permalink to &quot;type&quot;">â€‹</a></h3><blockquote><p><strong>type</strong>: <a href="./../enumerations/MutationType.html"><code>MutationType</code></a></p></blockquote><p>Type of the mutation.</p>',19)]))}const h=e(n,[["render",r]]);export{b as __pageData,h as default};
