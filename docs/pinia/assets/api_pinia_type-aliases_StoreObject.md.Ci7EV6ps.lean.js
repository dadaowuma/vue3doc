import{_ as t,c as a,a2 as o,o as r}from"./chunks/framework.DoMDgatr.js";const S=JSON.parse('{"title":"Type Alias: _StoreObject<S>","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/pinia/type-aliases/StoreObject.md","filePath":"api/pinia/type-aliases/StoreObject.md"}'),i={name:"api/pinia/type-aliases/StoreObject.md"};function n(s,e,c,p,l,d){return r(),a("div",null,e[0]||(e[0]=[o('<p><a href="./../../"><strong>API Documentation</strong></a> • <strong>Docs</strong></p><hr><p><a href="./../../">API Documentation</a> / <a href="./../">pinia</a> / _StoreObject</p><h1 id="Type-Alias-StoreObject-S-" tabindex="-1">Type Alias: _StoreObject&lt;S&gt; <a class="header-anchor" href="#Type-Alias-StoreObject-S-" aria-label="Permalink to &quot;Type Alias: \\_StoreObject\\&lt;S\\&gt;&quot;">​</a></h1><blockquote><p><strong>_StoreObject</strong>&lt;<code>S</code>&gt;: <code>S</code> <em>extends</em> <a href="./../interfaces/StoreDefinition.html"><code>StoreDefinition</code></a>&lt;infer Ids, infer State, infer Getters, infer Actions&gt; ? { [Id in `${Ids}${MapStoresCustomization extends Record&lt;&quot;suffix&quot;, infer Suffix&gt; ? Suffix : &quot;Store&quot;}`]: Function } : <code>object</code></p></blockquote><p>For internal use <strong>only</strong>.</p><h2 id="Type-Parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#Type-Parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>S</strong></p>',8)]))}const u=t(i,[["render",n]]);export{S as __pageData,u as default};
