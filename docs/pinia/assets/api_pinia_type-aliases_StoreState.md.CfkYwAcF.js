import{_ as t,c as a,a2 as o,o as r}from"./chunks/framework.DoMDgatr.js";const h=JSON.parse('{"title":"Type Alias: StoreState<SS>","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/pinia/type-aliases/StoreState.md","filePath":"api/pinia/type-aliases/StoreState.md"}'),s={name:"api/pinia/type-aliases/StoreState.md"};function S(c,e,i,n,p,d){return r(),a("div",null,e[0]||(e[0]=[o('<p><a href="./../../"><strong>API Documentation</strong></a> • <strong>Docs</strong></p><hr><p><a href="./../../">API Documentation</a> / <a href="./../">pinia</a> / StoreState</p><h1 id="Type-Alias-StoreState-SS-" tabindex="-1">Type Alias: StoreState&lt;SS&gt; <a class="header-anchor" href="#Type-Alias-StoreState-SS-" aria-label="Permalink to &quot;Type Alias: StoreState\\&lt;SS\\&gt;&quot;">​</a></h1><blockquote><p><strong>StoreState</strong>&lt;<code>SS</code>&gt;: <code>SS</code> <em>extends</em> <a href="./Store.html"><code>Store</code></a>&lt;<code>string</code>, infer S, <a href="./GettersTree.html"><code>_GettersTree</code></a>&lt;<a href="./StateTree.html"><code>StateTree</code></a>&gt;, <a href="./ActionsTree.html"><code>_ActionsTree</code></a>&gt; ? <code>UnwrapRef</code>&lt;<code>S</code>&gt; : <a href="./ExtractStateFromSetupStore.html"><code>_ExtractStateFromSetupStore</code></a>&lt;<code>SS</code>&gt;</p></blockquote><p>Extract the state of a store type. Works with both a Setup Store or an Options Store. Note this unwraps refs.</p><h2 id="Type-Parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#Type-Parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>SS</strong></p>',8)]))}const m=t(s,[["render",S]]);export{h as __pageData,m as default};
