import{_ as t,c as o,a2 as a,o as r}from"./chunks/framework.DoMDgatr.js";const h=JSON.parse('{"title":"Interface: SetupStoreDefinition()<Id, SS>","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/pinia/interfaces/SetupStoreDefinition.md","filePath":"api/pinia/interfaces/SetupStoreDefinition.md"}'),i={name:"api/pinia/interfaces/SetupStoreDefinition.md"};function n(c,e,d,s,S,l){return r(),o("div",null,e[0]||(e[0]=[a('<p><a href="./../../"><strong>API Documentation</strong></a> • <strong>Docs</strong></p><hr><p><a href="./../../">API Documentation</a> / <a href="./../">pinia</a> / SetupStoreDefinition</p><h1 id="Interface-SetupStoreDefinition-Id-SS-" tabindex="-1">Interface: SetupStoreDefinition()&lt;Id, SS&gt; <a class="header-anchor" href="#Interface-SetupStoreDefinition-Id-SS-" aria-label="Permalink to &quot;Interface: SetupStoreDefinition()\\&lt;Id, SS\\&gt;&quot;">​</a></h1><p>Return type of <code>defineStore()</code> with a setup function.</p><ul><li><code>Id</code> is a string literal of the store&#39;s name</li><li><code>SS</code> is the return type of the setup function</li></ul><h2 id="See" tabindex="-1">See <a class="header-anchor" href="#See" aria-label="Permalink to &quot;See&quot;">​</a></h2><p><a href="./StoreDefinition.html">StoreDefinition</a></p><h2 id="Extends" tabindex="-1">Extends <a class="header-anchor" href="#Extends" aria-label="Permalink to &quot;Extends&quot;">​</a></h2><ul><li><a href="./StoreDefinition.html"><code>StoreDefinition</code></a>&lt;<code>Id</code>, <a href="./../type-aliases/ExtractStateFromSetupStore.html"><code>_ExtractStateFromSetupStore</code></a>&lt;<code>SS</code>&gt;, <a href="./../type-aliases/ExtractGettersFromSetupStore.html"><code>_ExtractGettersFromSetupStore</code></a>&lt;<code>SS</code>&gt;, <a href="./../type-aliases/ExtractActionsFromSetupStore.html"><code>_ExtractActionsFromSetupStore</code></a>&lt;<code>SS</code>&gt;&gt;</li></ul><h2 id="Type-Parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#Type-Parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>Id</strong> <em>extends</em> <code>string</code></p><p>• <strong>SS</strong></p><blockquote><p><strong>SetupStoreDefinition</strong>(<code>pinia</code>?, <code>hot</code>?): <a href="./../type-aliases/Store.html"><code>Store</code></a>&lt;<code>Id</code>, <a href="./../type-aliases/ExtractStateFromSetupStore.html"><code>_ExtractStateFromSetupStore</code></a>&lt;<code>SS</code>&gt;, <a href="./../type-aliases/ExtractGettersFromSetupStore.html"><code>_ExtractGettersFromSetupStore</code></a>&lt;<code>SS</code>&gt;, <a href="./../type-aliases/ExtractActionsFromSetupStore.html"><code>_ExtractActionsFromSetupStore</code></a>&lt;<code>SS</code>&gt;&gt;</p></blockquote><p>Return type of <code>defineStore()</code> with a setup function.</p><ul><li><code>Id</code> is a string literal of the store&#39;s name</li><li><code>SS</code> is the return type of the setup function</li></ul><h2 id="Parameters" tabindex="-1">Parameters <a class="header-anchor" href="#Parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><p>• <strong>pinia?</strong>: <code>null</code> | <a href="./Pinia.html"><code>Pinia</code></a></p><p>Pinia instance to retrieve the store</p><p>• <strong>hot?</strong>: <a href="./../type-aliases/StoreGeneric.html"><code>StoreGeneric</code></a></p><p>dev only hot module replacement</p><h2 id="Returns" tabindex="-1">Returns <a class="header-anchor" href="#Returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><a href="./../type-aliases/Store.html"><code>Store</code></a>&lt;<code>Id</code>, <a href="./../type-aliases/ExtractStateFromSetupStore.html"><code>_ExtractStateFromSetupStore</code></a>&lt;<code>SS</code>&gt;, <a href="./../type-aliases/ExtractGettersFromSetupStore.html"><code>_ExtractGettersFromSetupStore</code></a>&lt;<code>SS</code>&gt;, <a href="./../type-aliases/ExtractActionsFromSetupStore.html"><code>_ExtractActionsFromSetupStore</code></a>&lt;<code>SS</code>&gt;&gt;</p><h2 id="See-1" tabindex="-1">See <a class="header-anchor" href="#See-1" aria-label="Permalink to &quot;See&quot;">​</a></h2><p><a href="./StoreDefinition.html">StoreDefinition</a></p><h2 id="Properties" tabindex="-1">Properties <a class="header-anchor" href="#Properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="-id" tabindex="-1">$id <a class="header-anchor" href="#-id" aria-label="Permalink to &quot;$id&quot;">​</a></h3><blockquote><p><strong>$id</strong>: <code>Id</code></p></blockquote><p>Id of the store. Used by map helpers.</p><h4 id="Inherited-from" tabindex="-1">Inherited from <a class="header-anchor" href="#Inherited-from" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./StoreDefinition.html"><code>StoreDefinition</code></a>.<a href="./StoreDefinition.html#$id"><code>$id</code></a></p>',31)]))}const f=t(i,[["render",n]]);export{h as __pageData,f as default};
