import{_ as a,c as i,$ as e,o}from"./chunks/framework.BVElzs7h.js";const k=JSON.parse('{"title":"Migrando para versão 4.0 da versão 3.x","description":"","frontmatter":{},"headers":[],"relativePath":"ptbr/guide/migrating-to-4-0-from-3-x.md","filePath":"ptbr/guide/migrating-to-4-0-from-3-x.md"}'),t={name:"ptbr/guide/migrating-to-4-0-from-3-x.md"};function n(p,s,l,r,h,d){return o(),i("div",null,s[0]||(s[0]=[e(`<h1 id="migrando-para-versao-4-0-da-versao-3-x" tabindex="-1">Migrando para versão 4.0 da versão 3.x <a class="header-anchor" href="#migrando-para-versao-4-0-da-versao-3-x" aria-label="Permalink to &quot;Migrando para versão 4.0 da versão 3.x&quot;">​</a></h1><p>Quase todas as APIs do Vuex 4 permaneceram inalteradas desde o Vuex 3. No entanto, ainda existem algumas mudanças importantes que você deve corrigir.</p><ul><li><a href="#alteracoes-importantes">Alterações Importantes</a><ul><li><a href="#processo-de-instalacao">Processo de instalação</a></li><li><a href="#suporte-ao-typescript">Suporte ao TypeScript</a></li><li><a href="#os-pacotes-agora-estao-alinhados-com-vue-3">Os pacotes agora estão alinhados com Vue 3</a></li><li><a href="#a-funcao-createlogger-e-exportada-do-modulo-principal">A função &quot;createLogger&quot; é exportada do módulo principal</a></li></ul></li><li><a href="#novas-caracteristicas">Novas Características</a><ul><li><a href="#nova-funcao-de-composicao-usestore">Nova função de composição &quot;useStore&quot;</a></li></ul></li></ul><h2 id="alteracoes-importantes" tabindex="-1">Alterações Importantes <a class="header-anchor" href="#alteracoes-importantes" aria-label="Permalink to &quot;Alterações Importantes&quot;">​</a></h2><h3 id="processo-de-instalacao" tabindex="-1">Processo de instalação <a class="header-anchor" href="#processo-de-instalacao" aria-label="Permalink to &quot;Processo de instalação&quot;">​</a></h3><p>Para alinhar com o novo processo de inicialização do Vue 3, o processo de instalação do Vuex mudou. Para criar um novo <em>store</em>, os usuários agora são incentivados a usar a função createStore recém-introduzida.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { createStore } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vuex&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> store</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createStore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  state</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      count: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>Para instalar Vuex em uma instância Vue, passe o <code>store</code> em vez do Vuex.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { createApp } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vue&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { store } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;./store&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> App </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;./App.vue&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> app</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createApp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(App)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">use</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(store)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#app&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">NOTE</p><p>Embora esta não seja tecnicamente uma alteração importante, você ainda pode usar a sintaxe <code>new Store(...)</code>, recomendamos esta abordagem para alinhar com Vue 3 e Vue Router Next.</p></div><h3 id="suporte-ao-typescript" tabindex="-1">Suporte ao TypeScript <a class="header-anchor" href="#suporte-ao-typescript" aria-label="Permalink to &quot;Suporte ao TypeScript&quot;">​</a></h3><p>Vuex 4 remove suas tipagens globais para <code>this.$store</code> dentro de um componente Vue para resolver essa <a href="https://github.com/vuejs/vuex/issues/994" target="_blank" rel="noreferrer">issue #994</a>. Quando usado com TypeScript, você deve declarar seu próprio <em>module</em> <em>augmentation</em>.</p><p>Coloque o seguinte código em seu projeto para permitir que <code>this.$store</code> seja tipado corretamente:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// vuex-shim.d.ts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { ComponentCustomProperties } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vue&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { Store } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vuex&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">declare</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> module</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vue&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Declare seus próprios estados do store</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> State</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    count</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ComponentCustomProperties</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    $store</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Store</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">State</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Você pode aprender mais na seção <a href="./typescript-support.html">Suporte ao TypeScript</a>.</p><h3 id="os-pacotes-agora-estao-alinhados-com-vue-3" tabindex="-1">Os pacotes agora estão alinhados com Vue 3 <a class="header-anchor" href="#os-pacotes-agora-estao-alinhados-com-vue-3" aria-label="Permalink to &quot;Os pacotes agora estão alinhados com Vue 3&quot;">​</a></h3><p>Os seguintes pacotes são gerados para se alinhar aos pacotes Vue 3:</p><ul><li><code>vuex.global(.prod).js</code><ul><li>Para uso direto com <code>&lt;script src=&quot;...&quot;&gt;</code> no navegador. Expõe o Vuex global.</li><li>A distribuição (ou <em>build</em>) global é construída como IIFE, e não UMD, e destina-se apenas ao uso direto com <code>&lt;script src=&quot;...&quot;&gt;</code>.</li><li>Contém branches chumbadas no código (ou <em>hard-coded</em>) de prod/dev e a compilação de prod é pré-minificada. Use os arquivos <code>.prod.js</code> para produção.</li></ul></li><li><code>vuex.esm-browser(.prod).js</code><ul><li>Para uso com importações de módulo ES nativo (incluindo navegadores de suporte de módulo via <code>&lt;script type=&quot;module&quot;&gt;</code>.</li></ul></li><li><code>vuex.esm-bundler.js</code><ul><li>Para uso com empacotadores como <code>webpack</code>, <code>rollup</code> e <code>parcel</code>.</li><li>Deixa os branches de prod/dev com os guardas de tipo <code>process.env.NODE_ENV</code> (deve ser substituído pelo empacotador).</li><li>Não envia distribuições (ou <em>builds</em>) minificados (para ser feito junto com o resto do código após o empacotamento).</li></ul></li><li><code>vuex.cjs.js</code><ul><li>Para uso em renderização do lado do servidor (<em>server-side</em> <em>rendering</em>) no Node.js com <code>require()</code>.</li></ul></li></ul><h3 id="a-funcao-createlogger-e-exportada-do-modulo-principal" tabindex="-1">A função <code>createLogger</code> é exportada do módulo principal <a class="header-anchor" href="#a-funcao-createlogger-e-exportada-do-modulo-principal" aria-label="Permalink to &quot;A função \`createLogger\` é exportada do módulo principal&quot;">​</a></h3><p>No Vuex 3, a função <code>createLogger</code> foi exportada de <code>vuex/dist/logger</code>, mas agora está incluída no pacote principal. A função deve ser importada diretamente do pacote <code>vuex</code>.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { createLogger } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vuex&#39;</span></span></code></pre></div><h2 id="novas-caracteristicas" tabindex="-1">Novas Características <a class="header-anchor" href="#novas-caracteristicas" aria-label="Permalink to &quot;Novas Características&quot;">​</a></h2><h3 id="nova-funcao-de-composicao-usestore" tabindex="-1">Nova função de composição <code>useStore</code> <a class="header-anchor" href="#nova-funcao-de-composicao-usestore" aria-label="Permalink to &quot;Nova função de composição \`useStore\`&quot;">​</a></h3><p>Vuex 4 apresenta uma nova API para interagir com o <em>store</em> na API de composição (ou <em>Composition</em> API). Você pode usar a função de composição <code>useStore</code> para recuperar o <em>store</em> dentro do gatilho (ou <em>hook</em>) <code>setup</code> do componente.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { useStore } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vuex&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> store</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useStore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Você pode aprender mais na seção <a href="./composition-api.html">API de Composição</a>.</p>`,26)]))}const u=a(t,[["render",n]]);export{k as __pageData,u as default};
