import{_ as e,c as t,a2 as r,o as n}from"./chunks/framework.DoMDgatr.js";const h=JSON.parse('{"title":"Type Alias: _UnwrapAll<SS>","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/pinia/type-aliases/UnwrapAll.md","filePath":"api/pinia/type-aliases/UnwrapAll.md"}'),l={name:"api/pinia/type-aliases/UnwrapAll.md"};function o(p,a,s,i,c,d){return n(),t("div",null,a[0]||(a[0]=[r('<p><a href="./../../"><strong>API Documentation</strong></a> • <strong>Docs</strong></p><hr><p><a href="./../../">API Documentation</a> / <a href="./../">pinia</a> / _UnwrapAll</p><h1 id="Type-Alias-UnwrapAll-SS-" tabindex="-1">Type Alias: _UnwrapAll&lt;SS&gt; <a class="header-anchor" href="#Type-Alias-UnwrapAll-SS-" aria-label="Permalink to &quot;Type Alias: \\_UnwrapAll\\&lt;SS\\&gt;&quot;">​</a></h1><blockquote><p><strong>_UnwrapAll</strong>&lt;<code>SS</code>&gt;: <code>{ [K in keyof SS]: UnwrapRef&lt;SS[K]&gt; }</code></p></blockquote><p>Type that enables refactoring through IDE. For internal use <strong>only</strong></p><h2 id="Type-Parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#Type-Parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>SS</strong></p>',8)]))}const A=e(l,[["render",o]]);export{h as __pageData,A as default};
