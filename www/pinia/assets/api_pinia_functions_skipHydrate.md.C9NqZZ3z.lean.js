import{_ as t,c as a,a2 as r,o}from"./chunks/framework.DoMDgatr.js";const h=JSON.parse('{"title":"Function: skipHydrate()","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/pinia/functions/skipHydrate.md","filePath":"api/pinia/functions/skipHydrate.md"}'),n={name:"api/pinia/functions/skipHydrate.md"};function s(i,e,p,c,d,u){return o(),a("div",null,e[0]||(e[0]=[r('<p><a href="./../../"><strong>API Documentation</strong></a> • <strong>Docs</strong></p><hr><p><a href="./../../">API Documentation</a> / <a href="./../">pinia</a> / skipHydrate</p><h1 id="Function-skipHydrate-" tabindex="-1">Function: skipHydrate() <a class="header-anchor" href="#Function-skipHydrate-" aria-label="Permalink to &quot;Function: skipHydrate()&quot;">​</a></h1><blockquote><p><strong>skipHydrate</strong>&lt;<code>T</code>&gt;(<code>obj</code>): <code>T</code></p></blockquote><p>Tells Pinia to skip the hydration process of a given object. This is useful in setup stores (only) when you return a stateful object in the store but it isn&#39;t really state. e.g. returning a router instance in a setup store.</p><h2 id="Type-Parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#Type-Parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>T</strong> = <code>any</code></p><h2 id="Parameters" tabindex="-1">Parameters <a class="header-anchor" href="#Parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><p>• <strong>obj</strong>: <code>T</code></p><p>target object</p><h2 id="Returns" tabindex="-1">Returns <a class="header-anchor" href="#Returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>T</code></p><p>obj</p>',14)]))}const m=t(n,[["render",s]]);export{h as __pageData,m as default};
