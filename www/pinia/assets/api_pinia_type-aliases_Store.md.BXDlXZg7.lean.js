import{_ as t,c as o,a2 as a,o as r}from"./chunks/framework.DoMDgatr.js";const S=JSON.parse('{"title":"Type Alias: Store<Id, S, G, A>","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"api/pinia/type-aliases/Store.md","filePath":"api/pinia/type-aliases/Store.md"}'),c={name:"api/pinia/type-aliases/Store.md"};function d(s,e,i,n,p,l){return r(),o("div",null,e[0]||(e[0]=[a('<p><a href="./../../"><strong>API Documentation</strong></a> • <strong>Docs</strong></p><hr><p><a href="./../../">API Documentation</a> / <a href="./../">pinia</a> / Store</p><h1 id="Type-Alias-Store-Id-S-G-A-" tabindex="-1">Type Alias: Store&lt;Id, S, G, A&gt; <a class="header-anchor" href="#Type-Alias-Store-Id-S-G-A-" aria-label="Permalink to &quot;Type Alias: Store\\&lt;Id, S, G, A\\&gt;&quot;">​</a></h1><blockquote><p><strong>Store</strong>&lt;<code>Id</code>, <code>S</code>, <code>G</code>, <code>A</code>&gt;: <a href="./../interfaces/StoreWithState.html"><code>_StoreWithState</code></a>&lt;<code>Id</code>, <code>S</code>, <code>G</code>, <code>A</code>&gt; &amp; <code>UnwrapRef</code>&lt;<code>S</code>&gt; &amp; <a href="./StoreWithGetters.html"><code>_StoreWithGetters</code></a>&lt;<code>G</code>&gt; &amp; <a href="./ActionsTree.html"><code>_ActionsTree</code></a> <em>extends</em> <code>A</code> ? <code>object</code> : <code>A</code> &amp; <a href="./../interfaces/PiniaCustomProperties.html"><code>PiniaCustomProperties</code></a>&lt;<code>Id</code>, <code>S</code>, <code>G</code>, <code>A</code>&gt; &amp; <a href="./../interfaces/PiniaCustomStateProperties.html"><code>PiniaCustomStateProperties</code></a>&lt;<code>S</code>&gt;</p></blockquote><p>Store type to build a store.</p><h2 id="Type-Parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#Type-Parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>Id</strong> <em>extends</em> <code>string</code> = <code>string</code></p><p>• <strong>S</strong> <em>extends</em> <a href="./StateTree.html"><code>StateTree</code></a> = <code>object</code></p><p>• <strong>G</strong> = <code>object</code></p><p>• <strong>A</strong> = <code>object</code></p>',11)]))}const h=t(c,[["render",d]]);export{S as __pageData,h as default};
